# Generated by Django 5.2.5 on 2025-08-22 03:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='Nombre completo')),
                ('identification_type', models.CharField(choices=[('cedula', 'Cédula'), ('pasaporte', 'Pasaporte')], default='cedula', max_length=10)),
                ('identification_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Solo números, letras mayúsculas y guiones', regex='^[0-9A-Z\\-]+$')])),
                ('address', models.TextField(verbose_name='Dirección')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Formato: +593123456789 o 0987654321', regex='^\\+?[0-9\\-\\s]+$')])),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo electrónico')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Dueño',
                'verbose_name_plural': 'Dueños',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre del servicio')),
                ('service_type', models.CharField(choices=[('baño_normal', 'Baño Normal'), ('baño_medicado', 'Baño Medicado'), ('peluqueria', 'Peluquería Canina'), ('desparasitacion', 'Desparasitación'), ('atencion_general', 'Atención Canina General')], max_length=20)),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('duration_minutes', models.PositiveIntegerField(default=60, verbose_name='Duración en minutos')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Precio')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Servicio',
                'verbose_name_plural': 'Servicios',
                'ordering': ['service_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Pet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nombre de la mascota')),
                ('species', models.CharField(default='Canina', editable=False, max_length=50)),
                ('breed', models.CharField(max_length=100, verbose_name='Raza')),
                ('birth_date', models.DateField(help_text='Aproximada si es desconocida', verbose_name='Fecha de nacimiento')),
                ('gender', models.CharField(choices=[('M', 'Macho'), ('F', 'Hembra')], max_length=1, verbose_name='Sexo')),
                ('color', models.CharField(max_length=100, verbose_name='Color')),
                ('weight', models.DecimalField(decimal_places=2, help_text='Peso aproximado en kilogramos', max_digits=5, verbose_name='Peso (kg)')),
                ('allergies', models.TextField(blank=True, help_text='Alergias conocidas', verbose_name='Alergias')),
                ('medical_conditions', models.TextField(blank=True, help_text='Condiciones médicas preexistentes', verbose_name='Condiciones preexistentes')),
                ('additional_notes', models.TextField(blank=True, verbose_name='Notas adicionales')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pets', to='core.owner', verbose_name='Dueño')),
            ],
            options={
                'verbose_name': 'Mascota',
                'verbose_name_plural': 'Mascotas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateTimeField(verbose_name='Fecha y hora')),
                ('assigned_professional', models.CharField(blank=True, max_length=200, verbose_name='Profesional asignado')),
                ('reason', models.TextField(blank=True, verbose_name='Motivo de la cita')),
                ('status', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmada', 'Confirmada'), ('realizada', 'Realizada'), ('cancelada', 'Cancelada')], default='pendiente', max_length=15, verbose_name='Estado')),
                ('medication_type', models.CharField(blank=True, help_text='Para baños medicados y desparasitación', max_length=200, verbose_name='Tipo de medicamento')),
                ('instructions', models.TextField(blank=True, help_text='Indicaciones específicas del servicio', verbose_name='Indicaciones')),
                ('observations', models.TextField(blank=True, help_text='Observaciones del servicio realizado', verbose_name='Observaciones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='core.pet', verbose_name='Mascota')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.service', verbose_name='Servicio')),
            ],
            options={
                'verbose_name': 'Cita',
                'verbose_name_plural': 'Citas',
                'ordering': ['-appointment_date'],
            },
        ),
    ]
